type Query {
  hello: String!
  users: [User!]!
  profile: User!
}

type Mutation {
  createUser(data: createUserInput): User!
  createAdmin(data: createUserInput): User!
  login(email: String!, password: String!): AuthPayload
  toggleUserActivation(id: ID!): User!
  changeFirstPassword(newPassword: String!): Boolean!
}


type User {
  id: ID!
  firstName: String!
  otherNames: String
  lastName: String!
  email: String!
  role: Role!
  password: String!
  hasChangedPassword: Boolean!
  activated: Boolean!
}

input createUserInput {
  firstName: String!
  otherNames: String
  lastName: String!
  email: String!
}

type AuthPayload {
  token: String!
  user: User!
}

enum Role {
  ADMIN
  NORMAL_USER
}