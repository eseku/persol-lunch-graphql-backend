type User {
  id: ID! @id
  firstName: String!
  otherNames: String
  lastName: String!
  email: String! @unique
  role: Role!
  password: String!
  hasChangedPassword: Boolean!
  activated: Boolean!
  orders: [Order!]! @relation(name: "UserOrders", onDelete: CASCADE)
}

type Order {
  id: ID! @id
  createdAt: DateTime! @createdAt
  createdFor: DateTime!
  createdBy: User! @relation(name: "UserOrders", onDelete: SET_NULL)
  # meal: Order! @relation(name: "OrderMeal", link: "TABLE", onDelete: CASCADE)
  main: MainDish!
  side: SideDish!
  protein: Protein!
}

# type Meal {
#   id: ID! @id
#   order: Order! @relation(name: "OrderMeal")

# }

type MainDish {
  id: ID! @id
  name: String!
  orders: [Order!]!
}

type SideDish {
  id: ID! @id
  name: String!
  orders: [Order!]!
}

type Protein {
  id: ID! @id
  name: String!
  orders: [Order!]!
}

enum Role {
  ADMIN
  NORMAL_USER
}
